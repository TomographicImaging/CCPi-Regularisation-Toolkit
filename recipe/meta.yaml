# https://docs.conda.io/projects/conda-build/en/stable/resources/define-metadata.html#loading-data-from-other-files
# TODO: use scikit-build-core & setuptools_scm instead
{% set python_min = "3.10" %}
{% set project = load_file_data('../src/Python/pyproject.toml', from_recipe_dir=True).get('project', {}) %}
{% set build_number = environ.get('GIT_DESCRIBE_NUMBER', 0) | int %}
{% if cuda_compiler_version != "None" %}
{% set build_number = build_number + 200 %}
{% endif %}

package:
  name: {{ project.get('name') }}
  version: {{ project.get('version') }}

build:
  preserve_egg_dir: False
  number: {{ build_number }}
  python_version_independent: true
  run_exports:
    - {{ pin_subpackage(project.get('name'), max_pin='x.x') }}
    - {{ project.get('name') }} =*=cuda* # [cuda_compiler_version != "None"]
    - {{ project.get('name') }} =*=cpu*  # [cuda_compiler_version == "None"]
  ignore_run_exports:
    - cudatoolkit # [(cuda_compiler_version or "None").startswith("11")]
  #ignore_run_exports_from:
  #  - {{ compiler('cuda') }} # [cuda_compiler_version != "None"]
  script_env:
    - BUILD_CUDA=ON  # [cuda_compiler_version != "None"]
    - BUILD_CUDA=OFF # [cuda_compiler_version == "None"]
  string: cuda{{ cuda_compiler_version | replace('.', '') }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }} # [cuda_compiler_version != "None"]
  string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }} # [cuda_compiler_version == "None"]

source:
  path: ..

test:
  source_files:
    - ./test/
  commands:
    - python -m unittest discover -v -s test
requirements:
  build:
    - cmake
    - ninja
    - python # [build_platform != target_platform]
    - {{ compiler('cxx') }}
    #- {{ compiler('cuda') }} # [cuda_compiler_version != "None"]
    - cuda-compiler ~={{ cuda_compiler_version }} # [cuda_compiler_version != "None"]
  host:
    - python ~={{ python_min }}
    - llvm-openmp
    - setuptools
    - pip
    - cuda-cccl # [cuda_compiler_version != "None"]
    - cuda-version {{ cuda_compiler_version }} # [cuda_compiler_version != "None"]
  run:
    - python >={{ python_min }}
    - numpy
    - __cuda # [cuda_compiler_version != "None"]
    - {{ pin_compatible('cuda-version', min_pin='x', max_pin='x') }} # [cuda_compiler_version != "None"]

about:
  home: https://github.com/TomographicImaging/CCPi-Regularisation-Toolkit
  license:  Apache-2.0
  summary: 'The set of CPU/GPU optimised regularisation modules for iterative image reconstruction and other image processing tasks'
